<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Marketing_partner_coupon extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $is_logged_in = $this->session->userdata("admin_id");
        if($is_logged_in == "" || $is_logged_in == null){
            redirect("dashboard/login");
        }
        $this->load->model('Marketing_partner_coupon_model');
    } 

    /*
     * Listing of marketing_partner_coupons
     */
    function index()
    {
        $data['marketing_partner_coupons'] = $this->Marketing_partner_coupon_model->get_all_marketing_partner_coupons();
        
        $data['_view'] = 'marketing_partner_coupon/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new marketing_partner_coupon
     */
    function add()
    {   
        if(isset($_POST) && count($_POST) > 0)     
        {  
            $coupon = $this->input->post('coupon_code');
            $checkCode = $this->db->query("select * from marketing_partner_coupons where coupon_code='$coupon'")->result_array(); 
            if(count($checkCode)>0){
                $data['partners'] = $this->db->query("select * from marketing_partners where status=1")->result_array();            
                $data['_view'] = 'marketing_partner_coupon/add';
                $this->session->set_flashdata('error','Coupon has already been added.'); 
                $this->load->view('layouts/main',$data);
            }else{
                $params = array(
                    'is_active' => 1,
                    'marketing_partner_id' => $this->input->post('marketing_partner_id'),
                    'coupon_code' => $this->input->post('coupon_code'),
                    'created_on' => date('Y-m-d'),
                    'updated_on' => date('Y-m-d'),
                );
                $this->session->set_flashdata('success','Coupon added successfully'); 
                $marketing_partner_coupon_id = $this->Marketing_partner_coupon_model->add_marketing_partner_coupon($params);
                redirect('marketing_partner_coupon/index');
            }
            
        }
        else
        {
            $data['partners'] = $this->db->query("select * from marketing_partners where status=1")->result_array();            
            $data['_view'] = 'marketing_partner_coupon/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a marketing_partner_coupon
     */
    function edit($coupon_id)
    {   
        // check if the marketing_partner_coupon exists before trying to edit it
        $data['marketing_partner_coupon'] = $this->Marketing_partner_coupon_model->get_marketing_partner_coupon($coupon_id);
        
        if(isset($data['marketing_partner_coupon']['coupon_id']))
        {
            if(isset($_POST) && count($_POST) > 0)     
            { 
                $coupon = $this->input->post('coupon_code');
                $checkCode = $this->db->query("select * from marketing_partner_coupons where coupon_id!=".$coupon_id." && coupon_code='$coupon'")->result_array(); 
               
                if(count($checkCode)>0){
                   
                    $this->session->set_flashdata('error','Coupon has already been added.'); 
                    $data['partners'] = $this->db->query("select * from marketing_partners where status=1")->result_array();            
                    $data['_view'] = 'marketing_partner_coupon/edit';
                    $this->load->view('layouts/main',$data);
                }else{  
                    $params = array(
                        'is_active' => $this->input->post('is_active'),
                        'marketing_partner_id' => $this->input->post('marketing_partner_id'),
                        'coupon_code' => $this->input->post('coupon_code'),
                        'client_id' => $this->input->post('client_id'),
                        'used_on' => $this->input->post('used_on'),
                        'updated_on' => $this->input->post('updated_on'),
                    );
                    $this->session->set_flashdata('success','Coupon updated successfully'); 
                    $this->Marketing_partner_coupon_model->update_marketing_partner_coupon($coupon_id,$params);            
                    redirect('marketing_partner_coupon/index');
                }
            }
            else
            {
                $data['partners'] = $this->db->query("select * from marketing_partners where status=1")->result_array();            
                $data['_view'] = 'marketing_partner_coupon/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The marketing_partner_coupon you are trying to edit does not exist.');
    } 

    /*
     * Deleting marketing_partner_coupon
     */
    function remove($coupon_id)
    {
        $marketing_partner_coupon = $this->Marketing_partner_coupon_model->get_marketing_partner_coupon($coupon_id);

        // check if the marketing_partner_coupon exists before trying to delete it
        if(isset($marketing_partner_coupon['coupon_id']))
        {
            $this->Marketing_partner_coupon_model->delete_marketing_partner_coupon($coupon_id);
            redirect('marketing_partner_coupon/index');
        }
        else
            show_error('The marketing_partner_coupon you are trying to delete does not exist.');
    }
    
}
