<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Project_menu extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $is_logged_in = $this->session->userdata("admin_id");
        if($is_logged_in == "" || $is_logged_in == null){
            redirect("dashboard/login");
        }
        $this->load->model('Project_menu_model');
        $this->load->model('NotificationModel');
    } 

    /*
     * Listing of project_menu
     */
    function index($id="",$v="")
    {
        if($v=='s'){
            $id = str_replace("-"," ",$id);
        }
        $data['project_menu'] = $this->Project_menu_model->get_all_project_menu($id,$v);
        $data['project_status'] = '';
        $data['city'] = '';
        $data['name'] = '';
        $data['mobile'] = '';
        $data['_view'] = 'project_menu/index';
        $this->load->view('layouts/main',$data);
    }


    function search(){
        $status = $this->input->post('project_status');
        $city = $this->input->post('city');
        $name = $this->input->post('name');
        $mobile = $this->input->post('mobile');
        $data['project_status'] = $status;
        $data['city'] = $city;
        $data['name'] = $name;
        $data['mobile'] = $mobile;
        $where = "where project_id>0 ";

        if($status!="" && $status!=null){
            $where .= " and p.project_status='$status'";
        }

        if($city!="" && $city!=null){
            $where .= " and p.city='$city'";
        }

        if($name!="" && $name!=null){
            $where .= " and c.name like '%$name%'";
        }

        if($mobile!="" && $mobile!=null){
            $where .= " and c.mobile_number like '%$mobile%'";
        }
        $data['project_menu'] = $this->db->query("select p.* from project_menu p left join client_details c on c.client_id=p.client_id ".$where." group by p.project_id")->result_array();
        $data['_view'] = 'project_menu/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new project_menu
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('possession_in','Possession In','required');
		$this->form_validation->set_rules('floorplan','Floorplan','required');
		$this->form_validation->set_rules('purpose','Purpose','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'is_active' => $this->input->post('is_active'),
				'project_id_for_client' => $this->input->post('project_id_for_client'),
				'client_id' => $this->input->post('client_id'),
				'possession_in' => $this->input->post('possession_in'),
				'floorplan' => $this->input->post('floorplan'),
				'purpose' => $this->input->post('purpose'),
				'coupon_code' => $this->input->post('coupon_code'),
				'project_start_date' => $this->input->post('project_start_date'),
				'promissed_handover_date' => $this->input->post('promissed_handover_date'),
				'actual_handover_date' => $this->input->post('actual_handover_date'),
				'project_manager_name' => $this->input->post('project_manager_name'),
				'total_project_cost' => $this->input->post('total_project_cost'),
				'factory_project_cost' => $this->input->post('factory_project_cost'),
				'custom_cost' => $this->input->post('custom_cost'),
				'po_date' => $this->input->post('po_date'),
				'project_status' => $this->input->post('project_status'),
				'first_paymnt_made_on' => $this->input->post('first_paymnt_made_on'),
				'second_paymnt_made_on' => $this->input->post('second_paymnt_made_on'),
				'completed_on' => $this->input->post('completed_on'),
				'created_on' => $this->input->post('created_on'),
				'updated_on' => $this->input->post('updated_on'),
				'project_name' => $this->input->post('project_name'),
				'comments' => $this->input->post('comments'),
            );

            if($this->input->post('project_status')=='accepted' && $this->input->post('second_paymnt_made_on')=="")
            {
                $password = mt_rand(1000,9999);
                $this->db->where('client_id',$this->input->post('client_id'));
                $this->db->update('client_details',array('password'=>$password));
            }
            
            $project_menu_id = $this->Project_menu_model->add_project_menu($params);
            redirect('project_menu/index');
        }
        else
        {            
            $data['_view'] = 'project_menu/add';
            $this->load->view('layouts/main',$data);
        }
    }
    
    

    function viewChat($project_id)
    { 
        $data['chat'] = $this->db->query("select * from admin_client_chat where project_id=".$project_id." order by interaction_id")->result_array();
        $data['_view'] = 'project_menu/chat';
        $data['project_id'] = $project_id;
        $this->load->view('layouts/main',$data);
    }
    
    function saveChat(){
        $message = $this->input->post('message');
        // Count total files
        if(!empty($_FILES)){
            $countfiles = count($_FILES['files']['name']);
            $time = time();
            $upload_path = mkdir('uploads/'.$time, 0777, true);
            // Upload directory
            $upload_location = 'uploads/'.$time."/";
    
            // To store uploaded files path
            $files_arr = array();
    
            // Loop all files
            for($index = 0;$index < $countfiles;$index++){
    
            if(isset($_FILES['files']['name'][$index]) && $_FILES['files']['name'][$index] != ''){
                // File name
                $filename = $_FILES['files']['name'][$index];
    
                // Get extension
                $ext = strtolower(pathinfo($filename, PATHINFO_EXTENSION));
    
                // Valid image extension
                $valid_ext = array("png","jpeg","jpg");
    
                // Check extension
                if(in_array($ext, $valid_ext)){
    
                    // File path
                    $path = $upload_location.$filename;
    
                    // Upload file
                    if(move_uploaded_file($_FILES['files']['tmp_name'][$index],$path)){
                        $files_arr[] = $path;
                    }
                }
            }
            }
            $files = $upload_location;
            
        }else{
            $files = "";
            $files_arr = [];
        }
        $interaction_type = "";
        if($files!=""){
            $interaction_type = "doc";
        }
        $project_id = $this->input->post('project_id');
        $data = array(
            'project_id'=>$project_id,
            'interaction_on'=>date("Y-m-d H:i:s"),
            'interaction_text'=>$files,
            'interaction_type'=>$interaction_type,
            'comment'=>$message,
            'interaction_from'=>'admin'
        );
        $this->db->insert('admin_client_chat',$data);
        echo json_encode($files_arr);
        
        
    }

    /*
     * Editing a project_menu
     */
    function edit($project_id)
    {   
        // check if the project_menu exists before trying to edit it
        $data['project_menu'] = $this->Project_menu_model->get_project_menu($project_id);
        
        if(isset($data['project_menu']['project_id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('possession_in','Possession In','required');
			$this->form_validation->set_rules('floorplan','Floorplan','required');
			$this->form_validation->set_rules('purpose','Purpose','required');
		
			if($this->form_validation->run())     
            {
                $signoff = "";
                $sla = "";
                $design = "";
                $contract = "";
                
                $config['upload_path'] = './uploads/design/';
                $config['allowed_types'] = 'gif|jpg|png';
                $config['max_size'] = 2000;
                $config['max_width'] = 1500;
                $config['max_height'] = 1500;

                $this->load->library('upload', $config);

                if (!$this->upload->do_upload('design')) {
                } else {
                    $designdata = array('image_metadata' => $this->upload->data());
                    $design = $designdata['image_metadata']['file_name'];
                }

                


                $config1['upload_path'] = './uploads/design/';
                $config1['allowed_types'] = 'gif|jpg|png';
                $config1['max_size'] = 2000;
                $config1['max_width'] = 1500;
                $config1['max_height'] = 1500;

                $this->load->library('upload', $config1);

                if (!$this->upload->do_upload('signoff')) {
                } else {
                    $signoffdoc = array('image_metadata' => $this->upload->data());
                    $signoff = $signoffdoc['image_metadata']['file_name'];
                }

                $config2['upload_path'] = './uploads/design/';
                $config2['allowed_types'] = 'gif|jpg|png';
                $config2['max_size'] = 2000;
                $config2['max_width'] = 1500;
                $config2['max_height'] = 1500;

                $this->load->library('upload', $config2);

                if (!$this->upload->do_upload('sla')) {
                } else {
                    $sladoc = array('image_metadata' => $this->upload->data());
                    $sla = $sladoc['image_metadata']['file_name'];
                }


                $config3['upload_path'] = './uploads/design/';
                $config3['allowed_types'] = 'gif|jpg|png';
                $config3['max_size'] = 2000;
                $config3['max_width'] = 1500;
                $config3['max_height'] = 1500;

                $this->load->library('upload', $config3);

                if (!$this->upload->do_upload('contract')) {
                } else {
                    $cnt = array('image_metadata' => $this->upload->data());
                    $contract = $cnt['image_metadata']['file_name'];
                }
                
                if($this->input->post('project_start_date')!="" && $this->input->post('project_start_date')!=null){
                    $project_start_date = date('Y-m-d',strtotime($this->input->post('project_start_date')));
                }else{
                    $project_start_date = $this->input->post('project_start_date');
                }

                if($this->input->post('promissed_handover_date')!="" && $this->input->post('promissed_handover_date')!=null){
                    $promissed_handover_date = date('Y-m-d',strtotime($this->input->post('promissed_handover_date')));
                }else{
                    $promissed_handover_date = $this->input->post('promissed_handover_date');
                }

                if($this->input->post('actual_handover_date')!="" && $this->input->post('actual_handover_date')!=null){
                    $actual_handover_date = date('Y-m-d',strtotime($this->input->post('actual_handover_date')));
                }else{
                    $actual_handover_date = $this->input->post('actual_handover_date');
                }


                if($this->input->post('po_date')!="" && $this->input->post('po_date')!=null){
                    $po_date = date('Y-m-d',strtotime($this->input->post('po_date')));
                }else{
                    $po_date = $this->input->post('po_date');
                }

                if($this->input->post('first_paymnt_made_on')!="" && $this->input->post('first_paymnt_made_on')!=null){
                    $first_paymnt_made_on = date('Y-m-d',strtotime($this->input->post('first_paymnt_made_on')));
                }else{
                    $first_paymnt_made_on = $this->input->post('first_paymnt_made_on');
                }

                if($this->input->post('second_paymnt_made_on')!="" && $this->input->post('second_paymnt_made_on')!=null){
                    $second_paymnt_made_on = date('Y-m-d',strtotime($this->input->post('second_paymnt_made_on')));
                }else{
                    $second_paymnt_made_on = $this->input->post('second_paymnt_made_on');
                }

                if($this->input->post('completed_on')!="" && $this->input->post('completed_on')!=null){
                    $completed_on = date('Y-m-d',strtotime($this->input->post('completed_on')));
                }else{
                    $completed_on = $this->input->post('completed_on');
                }
                

                $params = array(
					'is_active' => $this->input->post('is_active'),
					'project_id_for_client' => $this->input->post('project_id_for_client'),
					'client_id' => $this->input->post('client_id'),
					'possession_in' => $this->input->post('possession_in'),
					'floorplan' => $this->input->post('floorplan'),
					'purpose' => $this->input->post('purpose'),
					'coupon_code' => $this->input->post('coupon_code'),
					'project_start_date' => $project_start_date,
					'promissed_handover_date' => $promissed_handover_date,
					'actual_handover_date' => $actual_handover_date,
					'project_manager_name' => $this->input->post('project_manager_name'),
					'total_project_cost' => $this->input->post('total_project_cost'),
					'factory_project_cost' => $this->input->post('factory_project_cost'),
					'custom_cost' => $this->input->post('custom_cost'),
					'po_date' => $po_date,
					'project_status' => $this->input->post('project_status'),
					'first_paymnt_made_on' => $first_paymnt_made_on,
					'second_paymnt_made_on' => $second_paymnt_made_on,
					'completed_on' => $completed_on,
					'created_on' => date('Y-m-d'),
					'updated_on' => date('Y-m-d'),
					'project_name' => $this->input->post('project_name'),
					'comments' => $this->input->post('comments'),
                );

                if($design!=""){
                    $params['design'] = $design;
                }
                if($sla!=""){
                    $params['sla'] = $sla;
                }
                if($contract!=""){
                    $params['contract'] = $contract;
                }
                if($signoff!=""){
                    $params['signoff'] = $signoff;
                }

                if($this->input->post('project_status')=='Design Ongoing')
                {
                    $password = 1234;//mt_rand(1000,9999);

                    $getClientDet = $this->db->query("select * from client_details where client_id=".$this->input->post('client_id'))->row_array();
                    $msg = "Hai";
                    $contact = $getClientDet['mobile_number'];
                    $sms = $this->NotificationModel->sendSms($msg,$contact);

                    if($getClientDet['email_id']!='' && $getClientDet['email_id']!=null){
                        $email = $getClientDet['email_id'];
                        $emailmsg = "Hi ";
                        $subject = "Password alert";
                        $emailNotify = $this->NotificationModel->sendEmail($subject,$emailmsg,$email);
                    }
                    
                    $this->db->where('client_id',$this->input->post('client_id'));
                    $this->db->update('client_details',array('password'=>$password));
                }

                if($this->input->post('project_status')!=$this->input->post('old_status'))
                {   
                    if($this->input->post('project_status')=='Design Ongoing' || $this->input->post('project_status')=='Design Accepted' || $this->input->post('project_status')=='Received First Payment' ){
                        $coupon = $this->input->post('coupon_code');
                        if($coupon!="" && $coupon!=null){
                            $getManager = $this->db->query("select m.partner_name,m.marketing_partner_id,m.mobile_no from marketing_partners m left join marketing_partner_coupons mc on m.marketing_partner_id=mc.marketing_partner_id where mc.coupon_code='$coupon'")->row_array();
                            $msg = "Hai";
                            $contact = $getManager['mobile_no'];
                            $sms = $this->NotificationModel->sendSms($msg,$contact);
        
                            if($getManager['email']!='' && $getManager['email']!=null){
                                $email = $getManager['email'];
                                $emailmsg = "Hi ";
                                $subject = "Password alert";
                                $emailNotify = $this->NotificationModel->sendEmail($subject,$emailmsg,$email);
                            }
                        }
                    }
                    
                    


                    $trackingdata = array(
                        'project_id'=>$project_id,
                        'status'=>$this->input->post('project_status'),
                        'updated_on'=>date("Y-m-d H:i:s"),
                        'comment'=>$this->input->post('comments')
                    );

                    $this->db->insert('project_tracking',$trackingdata);
                }

                $this->Project_menu_model->update_project_menu($project_id,$params);
                $this->session->set_flashdata('success','Project updated successfully');            
                redirect('project_menu/index');
            }
            else
            {
                $data['manager'] = $this->db->query("select * from managers")->result_array();
                $data['_view'] = 'project_menu/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The project_menu you are trying to edit does not exist.');
    } 

    /*
     * Deleting project_menu
     */
    function remove($project_id)
    {
        $project_menu = $this->Project_menu_model->get_project_menu($project_id);

        // check if the project_menu exists before trying to delete it
        if(isset($project_menu['project_id']))
        {
            $this->Project_menu_model->delete_project_menu($project_id);
            redirect('project_menu/index');
        }
        else
            show_error('The project_menu you are trying to delete does not exist.');
    }
    
}
